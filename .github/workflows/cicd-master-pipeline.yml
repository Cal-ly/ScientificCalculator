name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build the solution
        run: dotnet build --no-restore --configuration Release

      - name: Run unit tests
        run: dotnet test --no-build --verbosity normal --configuration Release

      - name: Publish project
        run: dotnet publish --configuration Release -o /ScientificCalculatorRelease

      - name: Save MSI as artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: msi-file
          path: ScientificCalculatorRelease/ScientificCalculatorSetup.msi

  check-msi-file:
    runs-on: windows-latest
    needs: build-and-test
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: msi-file
          path: ScientificCalculatorRelease/

      - name: Check if MSI file exists
        run: |
          if exist "ScientificCalculatorRelease\ScientificCalculatorSetup.msi" (
            echo "MSI file exists"
          ) else (
            echo "MSI file does not exist"
            exit 1
          )

  deploy:
    runs-on: windows-latest
    needs: check-msi-file
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: msi-file
          path: ScientificCalculatorRelease/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SCICALC_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}-${{ github.sha }}
          release_name: Release ${{ github.run_number }}
          body: Automated release generated by GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ScientificCalculatorRelease/ScientificCalculatorSetup.msi
          asset_name: ScientificCalculatorSetup.msi
          asset_content_type: application/octet-stream
